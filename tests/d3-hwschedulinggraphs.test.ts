import {describe, expect, test} from '@jest/globals';
import * as d3 from 'd3';
import {HwSchedulingTimelineGraph} from '../src/d3-hwschedulinggraphs';
import { TimelineData } from '../src/data';

const exampleData1 = { "data": [{ "id": 4, "label": "sizeBuff.dataOut.read()  4", "row": 0, "start": -0.17, "end": 0.17, "color": "lime", "textColor": "black", "portsIn": [], "portsOut": [[0.0, "dataOut"], [0.0, "orderingOut"]], "genericDeps": [] }, { "id": 7, "label": "NE 7", "row": 0, "start": 0.97, "end": 5.47, "color": "white", "textColor": "black", "portsIn": [[0.97, null, 4, 0, "white"], [0.97, null, 6, 0, "white"]], "portsOut": [[5.47, null]], "genericDeps": [] }, { "id": 13, "label": "TERNARY 13", "row": 0, "start": 8.94, "end": 12.14, "color": "white", "textColor": "black", "portsIn": [[8.94, "v0", 4, 0, "white"], [8.94, "c0", 7, 0, "white"], [8.94, "v1", 9, 0, "white"]], "portsOut": [[12.14, null]], "genericDeps": [] }, { "id": 39, "label": "TERNARY 39", "row": 1, "start": 8.94, "end": 12.14, "color": "white", "textColor": "black", "portsIn": [[8.94, "v0", 4, 0, "white"], [8.94, "c0", 36, 0, "white"], [8.94, "v1", 9, 0, "white"]], "portsOut": [[12.14, null]], "genericDeps": [] }, { "id": 35, "label": "<HlsNetNodeReadSync 35>", "row": 1, "start": -0.17, "end": 0.17, "color": "yellow", "textColor": "black", "portsIn": [[0.0, "io", 4, 0, "white"]], "portsOut": [[0.0, "ack"]], "genericDeps": [] }, { "id": 8, "label": "NOT 8", "row": 1, "start": 6.67, "end": 7.87, "color": "white", "textColor": "black", "portsIn": [[6.67, null, 7, 0, "white"]], "portsOut": [[7.87, null]], "genericDeps": [] }, { "id": 36, "label": "AND 36", "row": 2, "start": 6.67, "end": 7.87, "color": "white", "textColor": "black", "portsIn": [[6.67, null, 7, 0, "white"], [6.67, null, 35, 0, "white"]], "portsOut": [[7.87, null]], "genericDeps": [] }, { "id": 15, "label": "EQ 15", "row": 0, "start": 14.31, "end": 18.81, "color": "white", "textColor": "black", "portsIn": [[14.31, null, 13, 0, "white"], [14.31, null, 14, 0, "white"]], "portsOut": [[18.81, null]], "genericDeps": [] }, { "id": 17, "label": "ADD 17", "row": 1, "start": 14.31, "end": 18.81, "color": "white", "textColor": "black", "portsIn": [[14.31, null, 13, 0, "white"], [14.31, null, 16, 0, "white"]], "portsOut": [[18.81, null]], "genericDeps": [] }, { "id": 19, "label": "dataOut.write()  19", "row": 0, "start": 25.31, "end": 25.65, "color": "lime", "textColor": "black", "portsIn": [[25.48, "src", 13, 0, "white"], [25.48, "extraCond", 18, 0, "white"], [25.48, "skipWhen", 43, 0, "white"]], "portsOut": [[25.48, "orderingOut"]], "genericDeps": [] }, { "id": 40, "label": "EQ 40", "row": 2, "start": 14.31, "end": 18.81, "color": "white", "textColor": "black", "portsIn": [[14.31, null, 39, 0, "white"], [14.31, null, 14, 0, "white"]], "portsOut": [[18.81, null]], "genericDeps": [] }, { "id": 42, "label": "AND 42", "row": 1, "start": 24.11, "end": 24.45, "color": "white", "textColor": "black", "portsIn": [[24.28, null, 35, 0, "white"], [24.28, null, 40, 0, "white"]], "portsOut": [[24.28, null]], "genericDeps": [] }, { "id": 9, "label": "dataIn.read()  9", "row": 3, "start": 7.7, "end": 8.04, "color": "lime", "textColor": "black", "portsIn": [[7.87, "extraCond", 8, 0, "white"], [7.87, "skipWhen", 36, 0, "white"]], "portsOut": [[7.87, "dataOut"], [7.87, "orderingOut"]], "genericDeps": [] }, { "id": 18, "label": "NOT 18", "row": 2, "start": 24.28, "end": 25.48, "color": "white", "textColor": "black", "portsIn": [[24.28, null, 15, 0, "white"]], "portsOut": [[25.48, null]], "genericDeps": [] }, { "id": 24, "label": "TERNARY 24", "row": 3, "start": 22.28, "end": 25.48, "color": "white", "textColor": "black", "portsIn": [[22.28, "v0", 23, 0, "white"], [22.28, "c0", 15, 0, "white"], [22.28, "v1", 17, 0, "white"]], "portsOut": [[25.48, null]], "genericDeps": [] }, { "id": 43, "label": "AND 43", "row": 4, "start": 24.28, "end": 25.48, "color": "white", "textColor": "black", "portsIn": [[24.28, null, 37, 0, "white"], [24.28, null, 42, 0, "white"]], "portsOut": [[25.48, null]], "genericDeps": [] }, { "id": 37, "label": "<HlsNetNodeReadSync 37>", "row": 4, "start": 7.7, "end": 8.04, "color": "yellow", "textColor": "black", "portsIn": [[7.87, "io", 9, 0, "white"]], "portsOut": [[7.87, "ack"]], "genericDeps": [] }, { "id": 25, "label": "sizeBuff.dataIn.write()  25", "row": 1, "start": 25.31, "end": 25.65, "color": "lime", "textColor": "black", "portsIn": [[25.48, "src", 24, 0, "white"]], "portsOut": [[25.48, "orderingOut"]], "genericDeps": [] }, { "id": 6, "label": "0x0", "row": 1, "start": 0.8, "end": 1.14, "color": "plum", "textColor": "black", "portsIn": [], "portsOut": [[0.97, "val"]], "genericDeps": [] }, { "id": 14, "label": "0x0", "row": 3, "start": 14.14, "end": 14.48, "color": "plum", "textColor": "black", "portsIn": [], "portsOut": [[14.31, "val"]], "genericDeps": [] }, { "id": 16, "label": "0xff", "row": 4, "start": 14.14, "end": 14.48, "color": "plum", "textColor": "black", "portsIn": [], "portsOut": [[14.31, "val"]], "genericDeps": [] }, { "id": 23, "label": "0x0", "row": 5, "start": 22.11, "end": 22.45, "color": "plum", "textColor": "black", "portsIn": [], "portsOut": [[22.28, "val"]], "genericDeps": [] }], "clkPeriod": 6.669999999999999 } as TimelineData;

describe('Testing wave rendering of example', () => {
	var root = d3.select('body')
		.append('div')
		.attr("id", "timelineGraphContainer");

	root.attr('width', 500)
		.attr('height', 500);
	let rootDiv = document.getElementById('timelineGraphContainer') as HTMLDivElement;
	if (!rootDiv) {
		throw new Error("Root div was just added but it is not there")
	}
	var timeline = new HwSchedulingTimelineGraph(rootDiv,
		exampleData1);
	timeline.draw();

	it('SVG has correct count of task nodes', function() {
		var v = root.selectAll('rect');
		expect(v.size()).toBe(exampleData1.data.length);
	});
});
